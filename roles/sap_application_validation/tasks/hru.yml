---
- name: Delete temporary created files in previous this script run
  shell: rm -f /tmp/sidfile.txt /tmp/SAPDBHOSTfile.txt /tmp/testing1.txt /tmp/sidfile_temp.txt /tmp/sidlist_upd.txt /tmp/application_validation_status_all.txt
  become: yes

- name: check sapmnt is found or not
  shell: df -g|grep -i sapmnt|wc -l
  register: df

- debug:
    msg: "{{ df }}"

- name: Setting facts - df
  set_fact:
    df: "{{ df['stdout'] }}"

- debug:
    msg: "{{ df }}"

- name: Getting current host info
  shell: hostname
  register: hname

- debug:
    msg: "{{ hname }}"

- name: Setting facts - hname
  set_fact:
    hname: "{{ hname['stdout'] }}"

- debug:
    msg: "{{ hname }}"

- name: Get number of SIDs
  shell: |
    df -g|grep -i sapmnt|awk '{print $NF}'|cut -d/ -f3 > /tmp/sidfile_temp.txt
    for j in `cat /tmp/sidfile_temp.txt`
    do
    systype=`cat /sapmnt/$j/profile/DEFAULT.PFL|grep -i "system/type"|awk '{print $3}'`
    echo "$systype $j" >> /tmp/sidlist_upd.txt
    done
    cat /tmp/sidlist_upd.txt|sort -r|awk '{print $2}' > /tmp/sidfile.txt
  when: df | int >= 1

- name: Get sid list
  shell: cat /tmp/sidfile.txt
  register: sidd
  when: df | int >= 1

- name: Demo set_facts
  set_fact:
    sidd_list: "{{ sidd.stdout_lines | list }}"
  when: df | int >= 1

- name: Get sid values are in temp file
  shell: |
    cat /tmp/sidfile.txt
    echo "Following SID are found in {{ hname }} server" > /tmp/testing1.txt
    cat /tmp/sidfile.txt >> /tmp/testing1.txt
    echo "-------------------------------------------------" >> /tmp/testing1.txt
  when: df | int >= 1

- name: Get sidadm user
  shell: cat /tmp/sidfile.txt| tr [:upper:] [:lower:] | sed '/$/s/.*/&adm/'
  register: sids
  when: df | int >= 1

- name: Debug Registry
  debug: var=sids
  when: df | int >= 1

- name: Demo set_facts
  set_fact:
    sids_list: "{{ sids.stdout_lines | list }}"
  when: df | int >= 1

- name: Collect values
  shell: |
    sidname=`echo {{ item }}|cut -c 1-3 | tr '[a-z]' '[A-Z]'`
    hstname=`hostname`
    instnum=`grep -i SAPSYSTEM /sapmnt/$sidname/profile/$sidname_*_$hstname|grep -v SAPSYSTEMNAME|grep -v SCS|awk '{print $3}'`
    echo "$hstname -- $sidname" > /tmp/validation_status_$sidname.txt
    su - {{ item }} -c "sapcontrol -nr $instnum -function GetProcessList" >> /tmp/validation_status_$sidname.txt
    su - {{ item }} -c "sapcontrol -nr $instnum -function GetSystemInstanceList" >> /tmp/validation_status_$sidname.txt
    echo "----------------------------------------------------------------------------------------------" >> /tmp/validation_status_$sidname.txt
    cat /tmp/validation_status_$sidname.txt >> /tmp/application_validation_status_all.txt
    cat /tmp/application_validation_status_all.txt
  register: simulate
  with_items: "{{ sids_list }}"
  ignore_errors: true
  when: df | int >= 1

- name: Results of collection
  debug:
    msg: "{{ item }}"
  with_items: "{{ simulate.results }}"
  when: df | int >= 1

- name: Registering output file
  shell: cat /tmp/application_validation_status_all.txt
  register : outputfinal

- name: Demo set_facts final output
  set_fact:
    outputfinal: "{{ outputfinal['stdout'] }}"
  
- debug:
    msg: "{{ outputfinal }}"
 
- name: "Delicate output to bld0d server"
  lineinfile:
    path: "/tmp/finaloutput.txt"
    line: "{{ outputfinal }}"
  delegate_to: ampsv010bld0d
