---
- name: collect the version of SAP
  win_shell: sqlcmd -S {{ inventory_hostname }} -U {{ user_name }} -P {{ user_password }} -d {{ item.name }} -Q "select distinct STEXT from {{ item.name|lower }}.CVERS_TXT where LANGU='E';" | select-string -pattern SAP  
  register: sap_verison
  loop: "{{ sid_mssql }}"

- name: Display the SAP Version
  debug:
    msg: "{{ item }}"
  loop: 
    - "{{ sap_verison.results[0].stdout }}"


- name: collect the name of DB
  win_shell: |
    $sql_name = (sqlcmd -S {{ inventory_hostname }} -U {{ user_name }} -P {{ user_password }} -d {{ item.name }} -Q "select @@version;" |Select-String -Pattern SQL).ToString()
    $sql_name.Substring(0,29)
  register: db_name
  loop: "{{ sid_mssql }}"

- name: Display the name of DB
  debug:
    msg: "{{ item }}"
  loop: 
    - "{{ db_name.results[0].stdout }}" 

- name: collect the version of DB
  win_shell: |
    $sql_version = (sqlcmd -S {{ inventory_hostname }} -U {{ user_name }} -P {{ user_password }} -d {{ item.name }} -Q "select @@version;" |Select-String -Pattern SQL).ToString()
    $sql_version.Substring(30,7)
  register: db_verison
  loop: "{{ sid_mssql }}"

- name: Display the name of DB
  debug:
    msg: "{{ item }}"
  loop: 
    - "{{ db_verison.results[0].stdout }}" 

- name: collect the version of Kernel base
  win_shell: |
    $ker_base = sqlcmd -S {{ inventory_hostname }} -U {{ user_name }} -P {{ user_password }} -d {{ item.name }} -Q "select  top 1 SAPRELEASE,substring(PATCHNO, patindex('%[^0]%',PATCHNO), 10) ,TIMESTAMP from {{ item.name|lower }}.PATCHHIST where EXECUTABLE='disp+work' order by 3 desc"
    $ker_base[2] | %{ (-split $_)[0] }
  register: kernal_base_verison
  loop: "{{ sid_mssql }}"

- name: Display the version of Kernel base
  debug:
    msg: "{{ item  }}"
  loop: 
    - "{{ kernal_base_verison.results[0].stdout }}"

- name: collect the version of Kernel patch
  win_shell: |
    $ker_patch = sqlcmd -S {{ inventory_hostname }} -U {{ user_name }} -P {{ user_password }} -d {{ item.name }} -Q "select  top 1 SAPRELEASE,substring(PATCHNO, patindex('%[^0]%',PATCHNO), 10) ,TIMESTAMP from {{ item.name|lower }}.PATCHHIST where EXECUTABLE='disp+work' order by 3 desc"
    $ker_patch[2] | %{ (-split $_)[0] }
  register: kernal_patch_verison
  loop: "{{ sid_mssql }}"

- name: Display the version version of Kernel patch
  debug:
    msg: "{{ item  }}"
  loop: 
    - "{{ kernal_patch_verison.results[0].stdout }}"

