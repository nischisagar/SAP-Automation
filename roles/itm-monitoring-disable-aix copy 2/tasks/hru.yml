---
- name: Enable/Disable ITM Monitoring
  shell:  |
    echo "{{ sid_list }}" > /tmp/itm_sidlist.txt
    cat /tmp/itm_sidlist.txt|cut -d, -f1 > /tmp/itmsid.txt
    cat /tmp/itm_sidlist.txt|cut -d, -f2 >> /tmp/itmsid.txt
    cat /tmp/itm_sidlist.txt|cut -d, -f3 >> /tmp/itmsid.txt
    cat /tmp/itm_sidlist.txt|cut -d, -f4 >> /tmp/itmsid.txt
    grep . /tmp/itmsid.txt|uniq > /tmp/itm_sidlist.txt
    echo "SID" > /tmp/itmmontest/sidcheck
    cat /tmp/itm_sidlist.txt

  register: sidlist1

- debug:
    msg:  "{{ sidlist1.stdout_lines }}"

- name: Get first word
  shell:  |
    cat /tmp/itm_sidlist.txt|head -1
  register: fword

- debug:
    msg: "{{ fword }}"

- name: Setting facts - fword
  set_fact:
    fword: "{{ fword['stdout'] }}"

- debug:
    msg: "{{ fword }}"

- name: check Monitoring already disabled 
  stat:
    path: "/tmp/itmmontest/mon_disabled"
  register: file_data

- name: Disable full monitoring for AIX
  shell:  |
    cp -rpf /tmp/itmmontest/K07_process.param /tmp/itmmontest/K07_process.param_lastused
    cp -rpf /tmp/itmmontest/K07_process.param /tmp/itmmontest/K07_process.param_`date +%d%m%y%T`
    sed -e 's/^/#/' /tmp/itmmontest/K07_process.param_lastused > /tmp/itmmontest/K07_process.param_temp
    awk '{gsub(/^##/,"#");  print}' /tmp/itmmontest/K07_process.param_temp > /tmp/itmmontest/K07_process.param
    cp -rpf /tmp/itmmontest/K07_filesystem.param /tmp/itmmontest/K07_filesystem.param_lastused
    cp -rpf /tmp/itmmontest/K07_filesystem.param /tmp/itmmontest/K07_filesystem.param_`date +%d%m%y%T`
    sed -e '/^;/s/^/#/' /tmp/itmmontest/K07_filesystem.param_lastused > /tmp/itmmontest/K07_filesystem.param_temp
    awk '{gsub(/^##/,"#");  print}' /tmp/itmmontest/K07_filesystem.param_temp > /tmp/itmmontest/K07_filesystem.param
    echo "Monitoring disabled at `date +%d%m%y_%T` by "{{ muser }}"" > /tmp/itmmontest/mon_disabled
    echo "nosid" > /tmp/itmmontest/sidcheck
  register: disable_all_aix
  when: fword == "ALL" and not file_data.stat.exists

- name: Disable sap monitoring alone
  shell:  |
    cp -rpf /tmp/itmmontest/K07_process.param /tmp/itmmontest/K07_process.param_lastused
    cp -rpf /tmp/itmmontest/K07_process.param /tmp/itmmontest/K07_process.param_`date +%d%m%y%T`
    sed -e '/mysap/s/^/#/' /tmp/itmmontest/K07_process.param_lastused > /tmp/itmmontest/K07_process.param_temp
    awk '{gsub(/^##/,"#");  print}' /tmp/itmmontest/K07_process.param_temp > /tmp/itmmontest/K07_process.param
    cp -rpf /tmp/itmmontest/K07_filesystem.param /tmp/itmmontest/K07_filesystem.param_lastused
    cp -rpf /tmp/itmmontest/K07_filesystem.param /tmp/itmmontest/K07_filesystem.param_`date +%d%m%y%T`
    sed -e '/;mysap/s/^/#/' /tmp/itmmontest/K07_filesystem.param_lastused > /tmp/itmmontest/K07_filesystem.param_temp
    awk '{gsub(/^##/,"#");  print}' /tmp/itmmontest/K07_filesystem.param_temp > /tmp/itmmontest/K07_filesystem.param
    echo "Monitoring disabled at `date +%d%m%y_%T` by "{{ muser }}"" > /tmp/itmmontest/mon_disabled
    echo "nosid" > /tmp/itmmontest/sidcheck
  register: disable_sap
  when: fword == "mysap" and not file_data.stat.exists

- name: Disable aix monitoring alone
  shell:  |
    cp -rpf /tmp/itmmontest/K07_process.param /tmp/itmmontest/K07_process.param_lastused
    cp -rpf /tmp/itmmontest/K07_process.param /tmp/itmmontest/K07_process.param_`date +%d%m%y%T`
    sed -e '/aix/s/^/#/' /tmp/itmmontest/K07_process.param_lastused > /tmp/itmmontest/K07_process.param_temp
    awk '{gsub(/^##/,"#");  print}' /tmp/itmmontest/K07_process.param_temp > /tmp/itmmontest/K07_process.param
    cp -rpf /tmp/itmmontest/K07_filesystem.param /tmp/itmmontest/K07_filesystem.param_lastused
    cp -rpf /tmp/itmmontest/K07_filesystem.param /tmp/itmmontest/K07_filesystem.param_`date +%d%m%y%T`
    sed -e '/;aix/s/^/#/' /tmp/itmmontest/K07_filesystem.param_lastused > /tmp/itmmontest/K07_filesystem.param_temp
    awk '{gsub(/^##/,"#");  print}' /tmp/itmmontest/K07_filesystem.param_temp > /tmp/itmmontest/K07_filesystem.param
    echo "Monitoring disabled at `date +%d%m%y_%T` by "{{ muser }}"" > /tmp/itmmontest/mon_disabled
    echo "nosid" > /tmp/itmmontest/sidcheck
  register: disable_aix
  when: fword == "OS" and not file_data.stat.exists

- name: check sid present
  shell:  |
    cat /tmp/itmmontest/sidcheck|head -1
  register: fword1

- debug:
    msg: "{{ fword1 }}"

- name: Setting facts - fword1
  set_fact:
    fword1: "{{ fword1['stdout'] }}"

- debug:
    msg: "{{ fword1 }}"

- name: Disable specific SID monitoring alone
  shell:  |
    cp -rpf /tmp/itmmontest/K07_process.param /tmp/itmmontest/K07_process.param_lastused
    cp -rpf /tmp/itmmontest/K07_process.param /tmp/itmmontest/K07_process.param_lastused1
    cp -rpf /tmp/itmmontest/K07_process.param /tmp/itmmontest/K07_process.param_`date +%d%m%y%T`
    cp -rpf /tmp/itmmontest/K07_filesystem.param /tmp/itmmontest/K07_filesystem.param_lastused
    cp -rpf /tmp/itmmontest/K07_filesystem.param /tmp/itmmontest/K07_filesystem.param_lastused1
    cp -rpf /tmp/itmmontest/K07_filesystem.param /tmp/itmmontest/K07_filesystem.param_`date +%d%m%y%T`
    for i in `cat /tmp/itm_sidlist.txt`
    do
    echo $i
    j=`echo $i|tr '[:upper:]' '[:lower:]'`
    echo $j
    sed -e '/'$i'/s/^/#/' -e '/'$j'/s/^/#/' /tmp/itmmontest/K07_process.param_lastused1 > /tmp/itmmontest/K07_process.param_temp
    mv /tmp/itmmontest/K07_process.param_temp /tmp/itmmontest/K07_process.param_lastused1
    sed -e '/'$i'/s/^/#/' -e '/'$j'/s/^/#/' /tmp/itmmontest/K07_filesystem.param_lastused1 > /tmp/itmmontest/K07_filesystem.param_temp
    mv /tmp/itmmontest/K07_filesystem.param_temp /tmp/itmmontest/K07_filesystem.param_lastused1
    done
    echo "Monitoring disabled at `date +%d%m%y_%T` by "{{ muser }}"" > /tmp/itmmontest/mon_disabled
    awk '{gsub(/^##/,"#");  print}' /tmp/itmmontest/K07_process.param_lastused1 > /tmp/itmmontest/K07_process.param
    rm -f /tmp/itmmontest/K07_process.param_lastused1
    awk '{gsub(/^##/,"#");  print}' /tmp/itmmontest/K07_filesystem.param_lastused1 > /tmp/itmmontest/K07_filesystem.param
    rm -f /tmp/itmmontest/K07_filesystem.param_lastused1
  register: disable_sid
  when: fword1 == "SID" and not file_data.stat.exists

- name: Update Monitoring already disabled
  shell:  |
    echo "Monitoring already disabled" > /tmp/itmmontest/monstatus
  register: mon_status
  when: file_data.stat.exists

